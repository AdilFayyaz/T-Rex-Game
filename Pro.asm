INCLUDE INCLUDES.INC
.MODEL SMALL, STDCALL
.STACK 4096
.386

TRUE TEXTEQU <0FFH>
FALSE TEXTEQU <0H>

BOOL TYPEDEF BYTE
POS STRUC
	X DW ?
	Y DW ?
POS ENDS
RECT STRUC
	X1 DW ?
	Y1 DW ?
	X2 DW ?
	Y2 DW ?
RECT ENDS
.DATA
	DINO_COORD	DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1
			DB 14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1 
			DB 14H, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H,14H, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1 
			DB 14H,14H,14H,14H, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1,14H, -1, -1, -1, -1 
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB  -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1,14H,14H,14H,14H, -1, -1,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,14H,14H, -1, -1, -1, -1,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,14H, -1, -1, -1, -1, -1, -1,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,14H, -1, -1, -1, -1, -1, -1,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,14H,14H,14H, -1, -1, -1, -1,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 

	DINO_COORD_1	DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1
			DB 14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1 
			DB 14H, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H,14H, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1 
			DB 14H,14H,14H,14H, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1,14H, -1, -1, -1, -1 
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB  -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1,14H,14H,14H,14H, -1, -1, -1,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,14H,14H, -1, -1, -1, -1, -1,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

	DINO_COORD_2	DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1
			DB 14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1 
			DB 14H, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H,14H, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1 
			DB 14H,14H,14H,14H, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1,14H, -1, -1, -1, -1 
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB  -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1,14H,14H,14H,14H, -1, -1,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,14H,14H, -1, -1, -1, -1,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1,14H,14H,14H, -1, -1, -1,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

	DINO_DOWN_3	DB 14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
			DB 14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1
			DB 14H,14H,14H,14H, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1,14H,14H,14H,14H,14H,14H,14H,14H
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB  -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1
			DB  -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H, -1,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1,14H, -1, -1, -1,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1,14H,14H, -1, -1, -1,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

	DINO_DOWN_4	DB 14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
			DB 14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1
			DB 14H,14H,14H,14H, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1,14H,14H,14H,14H,14H,14H,14H,14H
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB 14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H 
			DB  -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H
			DB  -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H, -1, -1, -1
			DB  -1, -1, -1, -1, -1,14H,14H,14H,14H,14H,14H,14H,14H, -1,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1,14H,14H, -1, -1, -1,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1,14H, -1, -1, -1, -1,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1,14H,14H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1

	CACTUS_NEW_1  	DB  -1, -1, -1, -1, -1, -1, -1,00H,00H,00H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1,00H,00H,00H, -1 
			DB  -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1,00H,02H,02H,02H,00H 
			DB  -1,00H,00H, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1,00H,02H,02H,02H,00H 
			DB 00H,02H,02H,00H, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1,00H,02H,02H,02H,00H 
			DB 00H,02H,02H,00H, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1,00H,02H,02H,02H,00H 
			DB 00H,02H,02H,00H, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1,00H,02H,02H,02H,00H 
			DB 00H,02H,02H,00H, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1,00H,02H,02H,02H,00H 
			DB 00H,02H,02H,00H, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1,00H,02H,02H,02H,00H 
			DB 00H,02H,02H,00H, -1, -1,00H,02H,02H,02H,02H,00H,00H,00H,00H,02H,02H,02H,02H,00H 
			DB 00H,02H,02H,00H, -1, -1,00H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,00H 
			DB 00H,02H,02H,00H,00H,00H,00H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,00H, -1 
			DB 00H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,00H,00H,00H,00H,00H,00H,00H, -1, -1 
			DB  -1,00H,02H,02H,02H,02H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1
			DB  -1, -1,00H,00H,00H,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1

	CACTUS_NEW_2 	DB  -1, -1, -1, -1, -1,00H,00H,00H, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1,00H,02H,02H,02H,00H, -1, -1, -1,00H, -1
			DB  -1, -1, -1, -1,00H,02H,02H,02H,00H, -1, -1,00H,02H,00H
			DB  -1,00H, -1, -1,00H,02H,02H,02H,00H, -1, -1,00H,02H,00H
			DB 00H,02H,00H, -1,00H,02H,02H,02H,00H, -1, -1,00H,02H,00H
			DB 00H,02H,00H, -1,00H,02H,02H,02H,00H, -1, -1,00H,02H,00H
			DB 00H,02H,00H, -1,00H,02H,02H,02H,00H,00H,00H,00H,02H,00H
			DB 00H,02H,00H, -1,00H,02H,02H,02H,02H,02H,02H,02H,02H,00H
			DB 00H,02H,00H,00H,00H,02H,02H,02H,02H,00H,00H,00H,00H, -1
			DB 00H,02H,02H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1 
			DB 00H,02H,02H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1 
			DB  -1,00H,00H,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1,00H,02H,02H,02H,00H, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1,00H,02H,02H,02H,00H, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1,00H,02H,02H,02H,00H,00H, -1, -1, -1, -1

	CACTUS_NEW_3	DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,00H,00H,00H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,00H,02H,02H,02H,00H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1,00H,00H, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1,00H,02H,02H,00H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1,00H,02H,02H,00H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1,00H,02H,02H,00H 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1,00H,02H,02H,00H 
			DB  -1,00H,00H,00H, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1,00H,02H,02H,00H 
			DB 00H,02H,02H,02H,00H, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1,00H,02H,02H,00H 
			DB 00H,02H,02H,02H,00H, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,02H,00H,00H,00H,00H,00H,02H,02H,02H,00H 
			DB 00H,02H,02H,02H,00H, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,00H, -1 
			DB 00H,02H,02H,02H,00H, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,00H, -1, -1 
			DB 00H,02H,02H,02H,00H, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,02H,00H,00H,00H,00H,00H,00H, -1, -1, -1 
			DB 00H,02H,02H,02H,00H, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB 00H,02H,02H,02H,00H, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB 00H,02H,02H,02H,00H, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB 00H,02H,02H,02H,00H, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB 00H,02H,02H,02H,02H,00H,00H,00H,00H,02H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1,00H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1,00H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1,00H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1,00H,00H,00H,00H,00H,02H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1,00H,00H,02H,02H,02H,02H,02H,00H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1,00H,00H,00H,00H,00H,00H,00H,00H,00H, -1, -1, -1, -1, -1, -1, -1, -1

	CACTUS_NEW_4 	DB  -1, -1, -1, -1, -1,00H,00H,00H, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1,00H,02H,02H,02H,00H, -1, -1, -1,00H, -1
			DB  -1, -1, -1, -1,00H,02H,02H,02H,00H, -1, -1,00H,02H,00H
			DB  -1,00H, -1, -1,00H,02H,02H,02H,00H, -1, -1,00H,02H,00H
			DB 00H,02H,00H, -1,00H,02H,02H,02H,00H, -1, -1,00H,02H,00H
			DB 00H,02H,00H, -1,00H,02H,02H,02H,00H, -1, -1,00H,02H,00H
			DB 00H,02H,00H, -1,00H,02H,02H,02H,00H,00H,00H,00H,02H,00H
			DB 00H,02H,00H, -1,00H,02H,02H,02H,02H,02H,02H,02H,02H,00H
			DB 00H,02H,00H,00H,00H,02H,02H,02H,02H,00H,00H,00H,00H, -1
			DB 00H,02H,02H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1 
			DB 00H,02H,02H,02H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1 
			DB  -1,00H,00H,00H,02H,02H,02H,02H,00H, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1,00H,02H,02H,02H,00H, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1,00H,02H,02H,02H,00H, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1,00H,02H,02H,02H,00H,00H, -1, -1, -1, -1

	CLOUD		DB  -1, -1, -1, -1, -1, -1, -1,00H,00H,00H,00H,00H,00H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1,00H,00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H,00H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1,00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1,00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H, -1, -1, -1, -1, -1, -1 
			DB  -1, -1,00H,00H,00H,00H,00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H,4CH,00H, -1, -1, -1, -1, -1 
			DB  -1,00H,4CH,4CH,4CH,4CH,00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H,4CH,4CH,4CH,00H, -1, -1, -1, -1 
			DB  -1,00H,4CH,4CH,4CH,4CH,00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H,4CH,4CH,4CH,00H, -1, -1, -1, -1 
			DB 00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H,00H, -1, -1 
			DB 00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H, -1 
			DB 00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H 
			DB 00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H 
			DB 00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H 
			DB  -1,00H,4CH,4CH,4CH,4CH,4CH,4CH,00H,00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H,4CH,4CH,4CH,4CH,4CH,00H,00H 
			DB  -1, -1,00H,4CH,4CH,4CH,4CH,00H,4CH,4CH,00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H,4CH,4CH,4CH,00H, -1, -1 
			DB  -1, -1,00H,00H,00H,00H,00H,00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H,00H,00H,00H,00H, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1,00H,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,4CH,00H,00H, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1,00H,00H,00H,00H,00H,00H,00H,00H,00H, -1, -1, -1, -1, -1, -1, -1, -1

	PLANE		DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,00H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,15H,15H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,15H,15H,00H, -1, -1, -1, -1, -1,00H,00H,00H, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,15H,15H,15H,00H, -1, -1, -1, -1,00H,15H,15H,00H, -1 
			DB  -1, -1, -1, -1,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,15H,15H,15H,00H, -1 
			DB  -1, -1,00H,00H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,00H, -1, -1 
			DB  -1,00H,15H,15H,25H,15H,15H,25H,15H,15H,25H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,00H, -1, -1 
			DB  -1,00H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,15H,00H,00H,00H,00H,00H,00H, -1, -1, -1 
			DB  -1, -1,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,15H,15H,15H,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,15H,15H,15H,00H, -1, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,15H,15H,15H,00H, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,15H,15H,15H,00H, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,00H,00H,00H,00H,00H, -1, -1, -1, -1, -1

	SUN_DRAW	DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,0EH,0EH,0EH,0EH, -1, -1, -1, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1, -1, -1, -1
			DB  -1, -1, -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1, -1, -1
			DB  -1, -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1, -1  
			DB  -1, -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1, -1 
			DB  -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1 
			DB  -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1 
			DB 0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1
			DB 0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH 
			DB 0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH 
			DB 0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH
			DB 0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH 
			DB  -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1 
			DB  -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1 
			DB  -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1 
			DB  -1, -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1, -1
			DB  -1, -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1, -1
			DB  -1, -1, -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1, -1, -1 
			DB  -1, -1, -1, -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH,0EH, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,0EH,0EH,0EH,0EH, -1, -1, -1, -1, -1, -1, -1, -1, -1

	MOON_DRAW	DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,1CH,1CH,1CH,1CH,1CH, -1, -1, -1, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1, -1, -1, -1
			DB  -1, -1, -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1, -1, -1
			DB  -1, -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1, -1  
			DB  -1, -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1, -1 
			DB  -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1 
			DB  -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1
			DB 1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1
			DB 1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH 
			DB 1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH 
			DB 1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH 
			DB 1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH
			DB 1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH 
			DB  -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1 
			DB  -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1 
			DB  -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1 
			DB  -1, -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1, -1
			DB  -1, -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1, -1
			DB  -1, -1, -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1, -1, -1 
			DB  -1, -1, -1, -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH,1CH, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,1CH,1CH,1CH,1CH,1CH, -1, -1, -1, -1, -1, -1, -1, -1, -1

	HEART		DB  -1, -1, -1,00H,00H,00H,00H, -1, -1, -1, -1, -1,00H,00H,00H,00H, -1, -1, -1
			DB  -1, -1,00H,28H,28H,28H,28H,00H, -1, -1, -1,00H,28H,28H,28H,28H,00H, -1, -1
			DB  -1,00H,28H,28H,28H,28H,28H,28H,00H, -1,00H,28H,28H,28H,28H,28H,28H,00H, -1  
			DB 00H,28H,28H,0FH,0FH,0FH,28H,28H,28H,00H,28H,28H,28H,28H,28H,28H,28H,28H,00H 
			DB 00H,28H,28H,0FH,0FH,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,00H 
			DB 00H,28H,28H,0FH,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,00H 
			DB 00H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,00H
			DB  -1,00H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,00H, -1 
			DB  -1, -1,00H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,00H, -1, -1 
			DB  -1, -1, -1,00H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,28H,00H, -1, -1, -1 
			DB  -1, -1, -1, -1,00H,28H,28H,28H,28H,28H,28H,28H,28H,28H,00H, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1,00H,28H,28H,28H,28H,28H,28H,28H,00H, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1,00H,28H,28H,28H,28H,28H,00H, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1, -1,00H,28H,28H,28H,00H, -1, -1, -1, -1, -1, -1, -1 
			DB  -1, -1, -1, -1, -1, -1, -1, -1,00H,28H,00H, -1, -1, -1, -1, -1, -1, -1, -1
			DB  -1, -1, -1, -1, -1, -1, -1, -1, -1,00H, -1, -1, -1, -1, -1, -1, -1, -1, -1

	STAR 		DB  -1, -1,0FH, -1, -1
			DB  -1,0FH,0FH,0FH, -1
			DB 0FH,0FH,0FH,0FH,0FH
			DB  -1,0FH,0FH,0FH, -1
			DB  -1, -1,0FH, -1, -1
			
	STRING1 DB "PLAY$"
	STRING2 DB "INSTRUCTIONS$"
	STRING3 DB "EXIT$"
	STRING4 DB "SCORE: $"
	STRING5 DB "HEALTH: $"
	STRING7 DB "ENTER PLAYERS NAME: $"
	STRING8 DB "GAME OVER! $"
	STRING9 DB "YOUR SCORE WAS: $"
	STRING10 DB "HIGHSCORES: $"
	POSN1 DB 0
	POSN2 DB 0
	COPYBX DW 0
	COUNT DW 0
	CDL DB 0
	
	HEALTH_COUNT DB 6
	GAME_START_STR DB "T-REX GAME$"
	CAL DB 0
	SCORE_TIMER DW 0
	STRING6 DB "BACK TO MENU $"
	HANDLER DW ?
	HANDLER2 DW ?
	BUFFER DB 736 DUP('$')
	BUFFER2 DB 736 DUP('$')
	FILENAME DB 'INSTRUCT.TXT' , 0
	FILENAME2 DB 'HS.TXT',0
	
	PLAYER_NAME DB 100 DUP('$')

	GFX_MODE DB 0H
	BG_CLR DB 1FH
	BG_SWAP DB 09H
	GROUND POS 320 DUP(<-1,160>), 320 DUP(<-1,161>), 320 DUP(<-1,162>)
	
	CACTUS_POS POS <500,136>,<500,145>,<500,132>,<500,145>
	CACTUS_RENDER BOOL 4 DUP(FALSE)
	CACTUS_HITBOXES RECT 4 DUP(<0,0,0,0>)

	GAME_TIMER DW 018FFH
	HURDLE_TIMER DB 0H

	SUN POS <319,50>
	MOON POS <319,50>
	TIME_BOOL BOOL TRUE
	TIME_ANIM DW 05H
	TIME_ANIM_BOOL BOOL TRUE

	DINO_DOWN BOOL FALSE
	DINO_DOWN_TIMER BOOL 0H
	DINO_X DW 10
	DINO_Y DW 137
	DINO_JUMP BOOL FALSE
	DINO_JUMP_ANIM DB 0H
	DINO_JUMP_TIME DB 0H
	DINO_ANIM DB 05H
	DINO_ANIM_BOOL BOOL FALSE
	DINO_HITBOX RECT <0,0,0,0>
	HITBOX_COOLDOWN DB 0H

	PLANE_X DW 319
	PLANE_SHOW BOOL FALSE
	PLANE_TIME DW 05FFH
	PLANE_COORD POS <0,0>
	PLANE_HITBOX RECT <0,0,0,0>
	CLOUD_1 POS <30,50>
	CLOUD_ANIM DB 03H
	
	BONUS_POS POS<500,120>
	BONUS_HITBOX RECT <0,0,0,0>
	BONUS_BOOL BOOL FALSE

	RAND_X DW 0
	RAND_W DW 0
	SEED DW 01234H

	SCORE_ARR DW 4 DUP(?)
.CODE
JMP MAIN
GET_MOUSE PROC
	MOUSE:
	MOV AX,01H
	INT 33H
	
	;GET MOUSE POSN
	MOV AX,03H
	INT 33H 
	
	MOV AX,CX
	MOV CL,8
	DIV CL
	MOV POSN1,AL
	
	MOV AX,DX
	MOV DL,8
	DIV DL
	MOV POSN2,AL

	MOV COPYBX,BX
	MDISPLAY_BOX POSN2,POSN1,COPYBX
	JMP MOUSE
		
	EX:
	RET
GET_MOUSE ENDP

GET_MOUSE2 PROC
	MOUSE:
    	MOV AX,01H
	INT 33H
	
	;GET MOUSE POSN
	MOV AX,03H
	INT 33H 
	
	MOV AX,CX
	MOV CL,8
	DIV CL
	MOV POSN1,AL
	
	MOV AX,DX
	MOV DL,8
	DIV DL
	MOV POSN2,AL

	MOV COPYBX,BX
	.IF (POSN1 >= 2 && POSN2 <= 13 && COPYBX == 1)
		MDISPLAY_BOX POSN2,POSN1,COPYBX
	.ENDIF
	JMP MOUSE
		
	EX:
	RET
GET_MOUSE2 ENDP
sound proc digit:WORD 
   mov     al, 182        
        out     43h, al         
        mov     ax, digit        
                                
        out     42h, al         
        mov     al, ah          
        out     42h, al 
        in      al, 61h       
                                
        or      al, 00000011b   
        out     61h, al        
        mov     bx, 25          
HOLD1:
        mov     cx, 65535
HOLD2:
        dec     cx
        jne     HOLD2
        dec     bx
        jne     HOLD1
        in      al, 61h         
                                
        and     al, 11111100b   
        out     61h, al        
		RET
		
sound endp

SCREEN1 PROC
	;SET MODE
	MOV AX,013H
	INT 10H
	
	;BACKGROUND COLOR
	DRAW_BOX 0,0,40,40,112 
	
	DRAW_BOX 0,0,40,5,105
	DRAW_BOX 0,34,40,40,105
	DRAW_BOX 0,0,6,40,0
	DRAW_BOX 0,0,40,0,0
	DRAW_BOX 0,39,40,40,0
	DRAW_BOX 33,0,40,40,0
		
	MSET_CURSOR 2,15
	MOV DX,OFFSET GAME_START_STR
	MOV AH,09H
	INT 21H
	
	;MOVE CURSOR
	MSET_CURSOR 9,18
		
	;PLAY BUTTON
	LEA DX,STRING1
	MOV AH,09H
	INT 21H
	
	;MOVE CURSOR
	MSET_CURSOR 11,14
			
	;INSTRUCTIONS BUTTON
	LEA DX,STRING2
	MOV AH,09H
	INT 21H
	
	;MOVE CURSOR
	MSET_CURSOR 13,18
		
	;EXIT BUTTON
	LEA DX,STRING3
	MOV AH,09H
	INT 21H
	
	;MSET_CURSOR 50,50
	MOV AX,02H
	INT 33H
	
	;INTRO SOUND
	invoke sound,5423d
	invoke sound,5119d
	invoke sound,4831d
	invoke sound,4560d
	invoke sound,4304d
	invoke sound,4063d
	invoke sound,3834d
	invoke sound,3619d
	invoke sound,3416d
	invoke sound,3224d
	invoke sound,3043d
	invoke sound,2873d
	invoke sound,2711d
	invoke sound,2559d
	invoke sound,2415d
	invoke sound,2280d
	
		
	CALL GET_MOUSE
	;MSET_CURSOR 50,60	
	RET
SCREEN1 ENDP

CHANGE_COLOR PROC COLOR:BYTE,REPLACEMENT:BYTE,ARR_PTR:WORD,ROW:WORD,COL:WORD
	XOR CX,CX
	MOV AL,COLOR
	MOV AH,REPLACEMENT
	MOV SI,ARR_PTR
	.WHILE(CX != ROW)
		XOR DX,DX
		.WHILE(DX != COL)
			MOV BL, BYTE PTR[SI]
			.IF (BL == AL)
				MOV [SI],AH
			.ENDIF
			INC SI
			INC DX
		.ENDW
		INC CX
	.ENDW
	RET
CHANGE_COLOR ENDP
ATOI PROC STR_PTR:WORD
	MOV SI,STR_PTR
	XOR AX,AX
	XOR DX,DX
	MOV BL,10
	.WHILE(1)
		MOV DL,[SI]
		.BREAK .IF (DL == '$')
		.IF (DL < '0' || DL > '9')
			.BREAK
		.ENDIF
		MUL BL
		SUB DL,48
		ADD AX,DX
		INC SI
	.ENDW
	RET
ATOI ENDP
ITOA PROC NUM:WORD,STR_PTR:WORD
	MOV AX,NUM
	MOV BX, 10
	MOV SI,STR_PTR
	XOR CX,CX
	L1:  
		XOR DX, DX
		DIV BX
		PUSH DX			; Pushes DX(remainder) to stack
		INC CX			; Increments counter to track the number of digits
		CMP AX, 0		; Checks if there is still something in AX to divide
		JNE L1
	L2:  
		POP DX
		ADD DX, 30H
		MOV [SI],DL
		INC SI
		LOOP L2			; Loops till CX equals zero
	MOV DL,'$'
	MOV [SI],DL
	RET
ITOA ENDP
CONVERT_NUM PROC STR_PTR:WORD
	MOV SI,STR_PTR
	PUSH SI
	INVOKE ATOI,SI
	POP SI
	PUSH AX
	.WHILE(1)
		MOV AL,[SI]
		INC SI
		.BREAK .IF (AL == 10)
	.ENDW
	PUSH SI
	INVOKE ATOI,SI
	POP SI
	PUSH AX
	.WHILE(1)
		MOV AL,[SI]
		INC SI
		.BREAK .IF (AL == 10)
	.ENDW
	INVOKE ATOI,SI
	PUSH AX
	POP CX
	POP BX
	POP AX
	RET
CONVERT_NUM ENDP
SORT PROC ARR_PTR:WORD
	MOV BX,0
	MOV SI,ARR_PTR
	.WHILE(BX < 4)
		MOV CX,0
		PUSH SI
		MOV SI,ARR_PTR
		.WHILE(CX < 3)
			MOV DI,WORD PTR[SI]
			.IF (DI < [SI+2])
				XCHG DI,[SI+2]
				MOV [SI],DI
			.ENDIF
			INC CX
			ADD SI,2
		.ENDW
		POP SI
		ADD SI,2
		INC BX
	.ENDW
	RET
SORT ENDP
SCREEN2 PROC
	MOV AL,03H
	MOV AH,0
	INT 10H

	MOV AH, 06H
	MOV AL, 00H
	MOV BH , 01100000B
	MOV CX, 00H
	MOV DX, 2184FH
	INT 10H	
	
	MOV DX, OFFSET FILENAME ; LOAD ADDRESS OF STRING FILENAME
	MOV AL, 0 ; OPENS FILE 
	MOV AH, 3DH ; LOAD FILE HANDLER AND STORE IN AX
	INT 21H
		
	MOV HANDLER,AX
	MOV BX,HANDLER ; MOVE FILE HANDLER TO BX
		
	MOV DX, OFFSET BUFFER ; LOAD ADDRESS OF STRING IN WHICH FILE CONTENTS WILL BE STORED AFTER READING
	MOV CX, LENGTHOF BUFFER
	MOV AH,3FH
	INT 21H

	;DISPLAYING THE STRING ON CONSOLE
	MOV DX,OFFSET BUFFER
	MOV AH,09H
	INT 21H

	;CLOSING THE FILE
	MOV AH,3EH
	INT 21H
	
	
	DRAW_BOX 2,2,2,13,01110000B

	MSET_CURSOR 2,2
	MOV DX,OFFSET STRING6
	MOV AH,09H
	INT 21H
	
	.WHILE (1)
		CALL GET_MOUSE2
	.ENDW
	
	RET 
SCREEN2 ENDP

SCREEN3 PROC
	CLS_SCREEN
	MOV AX,13H
	INT 10H



	MSET_CURSOR 36,41
	MOV DX,OFFSET STRING7
	MOV AH,09H
	INT 21H
	MSET_CURSOR 42,45
	MOV DX, OFFSET PLAYER_NAME
	MOV AH, 3FH
	INT 21H
	RET
SCREEN3 ENDP

SCREEN4 PROC
	CLS_SCREEN
	MOV AX,013H
	INT 10H
	
	.WHILE(1)
		MSET_CURSOR 36,46
		MOV DX,OFFSET STRING8
		MOV AH,09H
		INT 21H
		
		MSET_CURSOR 38,46
		LEA DX,PLAYER_NAME
		MOV AH,09H
		INT 21H
		
		MSET_CURSOR 40,46
		LEA DX,STRING9
		MOV AH,09H
		INT 21H

		MOV AX,COUNT
		CALL DISPLAY
		CALL DISPLAY_HIGHSCORE
		CALL GET_KEY
		JZ NO_CLEAR2
		.BREAK .IF (AL == 'Q')
		.BREAK .IF (AL == 'q')
		CALL CLEAR_KEY_BUFFER
	    NO_CLEAR2:
	.ENDW
	CALL CLEAR_KEY_BUFFER
	CLS_SCREEN
	MOV AH,4CH
	INT 21H
	RET
SCREEN4 ENDP
SRAND PROC
	MOV AH,02CH
		INT 21H
	MOV SEED,DX
	RET
SRAND ENDP
RAND PROC LOW_RANGE:WORD,HIGH_RANGE:WORD
	MOV AX,RAND_X
	MUL AX
	MOV BX,RAND_W
	ADD BX,SEED
	MOV RAND_W,BX
	ADD AX,BX
	XCHG AL,AH
	MOV RAND_X,AX
	MOV CX,HIGH_RANGE
	SUB CX,LOW_RANGE
	XOR DX,DX
	DIV CX
	MOV AX,DX
	ADD AX,LOW_RANGE
	RET
RAND ENDP
INIT_GFX PROC
	MOV AH,GFX_MODE
	MOV AL,13H
		INT 10H
	RET
INIT_GFX ENDP
BGRD_CLR PROC
	MOV AH, 06H
	MOV AL, 00H
	XOR CL,CL
	MOV CH,02H
	XOR DX, DX
	NOT DX
	MOV BH, BG_CLR
		INT 10H
	RET
BGRD_CLR ENDP
CLS PROC
	MOV AL,03H
	MOV AH,0H
		INT 10H
	RET
CLS ENDP
HIDE_MOUSE PROC
	MOV AX,02H
		INT 33H
	RET
HIDE_MOUSE ENDP
MOUSE_POS PROC
	MOV AX,03H
		INT 33H
	RET
MOUSE_POS ENDP
GET_KEY PROC
	MOV AH,01H
		INT 16H
	RET
GET_KEY ENDP
CLEAR_KEY_BUFFER PROC
	MOV AH,0CH
	MOV AL,0FFH
		INT 21H
	RET
CLEAR_KEY_BUFFER ENDP
DISPLAY PROC       			; DISPLAYS HEXADECIMAL AS DECIMAL OUTPUT
	MOV BX, 10
	MOV SI,DX
	XOR DX,DX
	XOR CX,CX
	L1:  
		XOR DX, DX
		DIV BX
		PUSH DX			; PUSHES DX(REMAINDER) TO STACK
		INC CX			; INCREMENTS COUNTER TO TRACK THE NUMBER OF DIGITS
		CMP AX, 0		; CHECKS IF THERE IS STILL SOMETHING IN AX TO DIVIDE
		JNE L1
	L2:  
		POP DX
		ADD DX, 30H
		MOV AH, 02H     
			INT 21H		; CALLS DOS TO DISPLAY CHARACTER
		LOOP L2			; LOOPS TILL CX EQUALS ZERO
	RET
DISPLAY ENDP
INITIALIZE_GROUND PROC
	LOCAL TEMP:WORD
	MOV TEMP,0
	MOV SI,OFFSET GROUND
	.WHILE(TEMP < 320)
		INVOKE RAND,0,7
		.IF (AX == 0)
			MOV BX,TEMP
			MOV [SI],AX
		.ELSEIF (AX == 2)
			MOV BX,TEMP
			MOV [SI+1280],BX
		.ELSEIF (AX == 4)
			MOV BX,TEMP
			MOV [SI+2560],BX
		.ENDIF
		
		INC TEMP
		ADD SI,4
	.ENDW
	RET
INITIALIZE_GROUND ENDP
DRAW_GROUND PROC
	MOV BX,0
	MOV AH,0CH
	MOV AL,17H
	MOV SI,OFFSET GROUND
	.WHILE(BX < 3840)
		MOV CX,[SI+BX]
		.IF (CX != -1)
			MOV DX,[SI+BX+2]
			INT 10H
			DEC WORD PTR [SI+BX]
			MOV CX,[SI+BX]
			.IF (CX > 320)
				MOV [SI+BX],WORD PTR 320
			.ENDIF
		.ENDIF
		ADD BX,4
	.ENDW
	RET
DRAW_GROUND ENDP
DISPLAY_NAME PROC
	MSET_CURSOR 1,0
	MOV AH,09H
	LEA DX,PLAYER_NAME
	INT 21H
	RET
DISPLAY_NAME ENDP
DRAW_COORDS PROC Y: WORD,X: WORD,ARR_PTR: WORD, ROW:WORD, COL:WORD
	XOR SI,SI
	MOV BX,ARR_PTR
	MOV DX,X

	MOV AH,0CH
	.WHILE(SI < ROW)
		XOR DI,DI
		MOV CX,Y
		.WHILE(DI < COL)
			MOV AL,[BX]
			.IF (AL != -1)
				INT 10H
			.ENDIF
			INC BX
			INC CX
			INC DI
			.IF (CX > 319)
				MOV CX,0
			.ENDIF
			.IF (DX > 199)
				MOV DX,0
			.ENDIF

		.ENDW
		INC SI
		INC DX
	.ENDW
	RET
DRAW_COORDS ENDP

TIMER PROC
	MOV AH, 86H
		INT 15H
	RET
TIMER ENDP
MAX PROC A:WORD, B:WORD
	MOV DX,B
	MOV AX,A
	.IF (DX > AX)
		MOV AX,DX
	.ENDIF
	RET
MAX ENDP
MIN PROC A:WORD, B:WORD
	MOV DX,B
	MOV AX,A
	.IF (DX < AX)
		MOV AX,DX
	.ENDIF
	RET
MIN ENDP
RANDOMIZE_HURDLE PROC
	INVOKE RAND,0,8
	.IF (AX == 0 && BONUS_BOOL != TRUE && HEALTH_COUNT != 6)
		INVOKE RAND,0,4
		.IF (AX == 2)
			MOV BONUS_POS.X,280
			MOV BONUS_BOOL,TRUE
		.ENDIF
	.ELSEIF (AX == 1 && PLANE_SHOW != TRUE)
		MOV PLANE_X,280
		MOV PLANE_SHOW,TRUE
	.ELSEIF (AX == 2 && CACTUS_RENDER[0] != TRUE)
		MOV CACTUS_POS[0].X,295
		MOV CACTUS_RENDER[0],TRUE
	.ELSEIF (AX == 3 && CACTUS_RENDER[1] != TRUE)
		MOV CACTUS_POS[4].X,295
		MOV CACTUS_RENDER[1],TRUE
	.ELSEIF (AX == 4 && CACTUS_RENDER[2] != TRUE)
		MOV CACTUS_POS[8].X,295
		MOV CACTUS_RENDER[2],TRUE
	.ELSEIF (AX == 5 && CACTUS_RENDER[3] != TRUE)
		MOV CACTUS_POS[12].X,295
		MOV CACTUS_RENDER[3],TRUE
	.ELSEIF (AX == 6 && CACTUS_RENDER[1] != TRUE && CACTUS_RENDER[2] != TRUE)
		MOV CACTUS_POS[8].X,280
		MOV CACTUS_POS[4].X,300
		MOV CACTUS_RENDER[1],TRUE
		MOV CACTUS_RENDER[2],TRUE
	.ELSEIF (AX == 7 && CACTUS_RENDER[1] != TRUE && CACTUS_RENDER[3] != TRUE)
		MOV CACTUS_POS[4].X,280
		MOV CACTUS_RENDER[1],TRUE
		MOV CACTUS_POS[12].X,295
		MOV CACTUS_RENDER[3],TRUE
	.ENDIF
	RET
RANDOMIZE_HURDLE ENDP
DRAW_DINO PROC
	MOV AL,HITBOX_COOLDOWN
	.IF (AL != 0H)
		ROL AL,3
		.IF (AL > 120)
			RET
		.ENDIF
	.ENDIF
	MOV DINO_HITBOX.X1,CX
	MOV DINO_HITBOX.X2,CX
	.IF (DINO_Y != 137)
		MOV DINO_HITBOX.Y1,DX
		MOV DINO_HITBOX.Y2,DX
		ADD DINO_HITBOX.X2,22
		ADD DINO_HITBOX.Y2,20
		INVOKE DRAW_COORDS,CX,DX,OFFSET DINO_COORD,25,25
	.ELSEIF (DINO_Y == 137)
		.IF (DINO_DOWN == TRUE && DINO_ANIM < 05H)
			ADD DX,13
			MOV DINO_HITBOX.Y1,DX
			MOV DINO_HITBOX.Y2,DX
			ADD DINO_HITBOX.X2,28
			ADD DINO_HITBOX.Y2,14
			INVOKE DRAW_COORDS,CX,DX,OFFSET DINO_DOWN_3,14,28
		.ELSEIF (DINO_DOWN == TRUE)
			ADD DX,13
			MOV DINO_HITBOX.Y1,DX
			MOV DINO_HITBOX.Y2,DX
			ADD DINO_HITBOX.X2,28
			ADD DINO_HITBOX.Y2,14
			INVOKE DRAW_COORDS,CX,DX,OFFSET DINO_DOWN_4,14,28	
		.ELSEIF (DINO_Y == 137 && DINO_ANIM < 05H)
			MOV DINO_HITBOX.Y1,DX
			MOV DINO_HITBOX.Y2,DX
			ADD DINO_HITBOX.X2,22
			ADD DINO_HITBOX.Y2,20
			INVOKE DRAW_COORDS,CX,DX,OFFSET DINO_COORD_1,25,25
		.ELSEIF (DINO_Y == 137)
			MOV DINO_HITBOX.Y1,DX
			MOV DINO_HITBOX.Y2,DX
			ADD DINO_HITBOX.X2,22
			ADD DINO_HITBOX.Y2,20
			INVOKE DRAW_COORDS,CX,DX,OFFSET DINO_COORD_2,25,25
		.ENDIF
	.ENDIF
	RET
DRAW_DINO ENDP
DISPLAY_HEALTH_1 PROC X: BYTE
	DRAW_BOX 0,0,0,32,00000000B
	MSET_CURSOR 0,57
	LEA DX,STRING5
	MOV AH,09H
	INT 21H
	MSET_CURSOR 0,64
	XOR CX,CX
	MOV DL, X
	.IF (DL==1)
		CALL SCREEN4
	.ENDIF
	.WHILE (CL != DL)
		MOV AH,09H
		MOV AL,3
		MOV BL,0100B
		MOV BH,0
		INT 10H
		INC CL
	.ENDW
	RET
DISPLAY_HEALTH_1 ENDP
INTERSECTION PROC BOX_1:WORD, BOX_2:WORD
	LOCAL X1:WORD, X2:WORD, Y1:WORD, Y2:WORD
	MOV SI,BOX_1
	MOV DI,BOX_2
	INVOKE MAX, [SI], [DI]
	MOV X1,AX
	INVOKE MAX, [SI+2], [DI+2]
	MOV Y1,AX
	INVOKE MIN, [SI+4], [DI+4]
	MOV X2,AX
	INVOKE MIN, [SI+6], [DI+6]
	MOV Y2,AX

	MOV BX,X2
	SUB BX,X1
	INC BX

	MOV CX,Y2
	SUB CX,Y1
	INC CX

	.IF (BX > 07FFH)
		MOV AX,0
	.ENDIF
	.IF (CX > 07FFH)
		MOV DX,0
	.ENDIF
	MUL DX
	RET
INTERSECTION ENDP
RENDER PROC
	INVOKE DISPLAY_HEALTH_1,HEALTH_COUNT
	DISPLAY_SCORE COUNT

	.IF (TIME_BOOL == FALSE)
		MOV CX,50
		MOV DX,50
		INVOKE DRAW_COORDS,CX,DX,OFFSET STAR,5,5
		MOV CX,120
		MOV DX,60
		INVOKE DRAW_COORDS,CX,DX,OFFSET STAR,5,5
		MOV CX,250
		MOV DX,30
		INVOKE DRAW_COORDS,CX,DX,OFFSET STAR,5,5
		MOV CX,200
		MOV DX,85
		INVOKE DRAW_COORDS,CX,DX,OFFSET STAR,5,5
		INVOKE DRAW_COORDS,MOON.X,MOON.Y,OFFSET MOON_DRAW,23,23
	.ELSEIF (TIME_BOOL == TRUE)
		INVOKE DRAW_COORDS,SUN.X,SUN.Y,OFFSET SUN_DRAW,22,22
	.ENDIF

	.IF (DINO_Y == 137)
		MOV SI,DINO_X
		ADD SI,17
		DRAW_LINE SI,159,320,0,17H
		SUB SI,12
		DRAW_LINE 0,159,SI,0,17H
	.ELSE
		DRAW_LINE 0,159,320,0,17H
	.ENDIF

	.IF (PLANE_SHOW == TRUE)
		MOV CX,PLANE_X
		MOV DX,135
		MOV PLANE_HITBOX.X1,CX
		MOV PLANE_HITBOX.Y1,DX
		MOV PLANE_HITBOX.X2,CX
		MOV PLANE_HITBOX.Y2,DX
		ADD PLANE_HITBOX.X2,25
		ADD PLANE_HITBOX.Y2,13
		INVOKE DRAW_COORDS,CX,DX,OFFSET PLANE,13,25
	.ENDIF

	.IF (CACTUS_RENDER[0] == TRUE)
		MOV CX,CACTUS_POS[0].X
		MOV DX,CACTUS_POS[0].Y
		MOV CACTUS_HITBOXES[0].X1,CX
		MOV CACTUS_HITBOXES[0].Y1,DX
		MOV CACTUS_HITBOXES[0].X2,CX
		ADD CACTUS_HITBOXES[0].X2,20
		MOV CACTUS_HITBOXES[0].Y2,DX
		ADD CACTUS_HITBOXES[0].Y2,25
		INVOKE DRAW_COORDS,CX,DX,OFFSET CACTUS_NEW_1,25,20
	.ENDIF

	.IF (CACTUS_RENDER[1] == TRUE)
		MOV CX,CACTUS_POS[4].X
		MOV DX,CACTUS_POS[4].Y
		MOV CACTUS_HITBOXES[8].X1,CX
		MOV CACTUS_HITBOXES[8].Y1,DX
		MOV CACTUS_HITBOXES[8].X2,CX
		ADD CACTUS_HITBOXES[8].X2,14
		MOV CACTUS_HITBOXES[8].Y2,DX
		ADD CACTUS_HITBOXES[8].Y2,15
		INVOKE DRAW_COORDS,CX,DX,OFFSET CACTUS_NEW_2,15,14
	.ENDIF

	.IF (CACTUS_RENDER[2] == TRUE)
		MOV CX,CACTUS_POS[8].X
		MOV DX,CACTUS_POS[8].Y
		MOV CACTUS_HITBOXES[16].X1,CX
		MOV CACTUS_HITBOXES[16].Y1,DX
		ADD CACTUS_HITBOXES[16].Y1,2
		MOV CACTUS_HITBOXES[16].X2,CX
		ADD CACTUS_HITBOXES[16].X2,20
		MOV CACTUS_HITBOXES[16].Y2,DX
		ADD CACTUS_HITBOXES[16].Y2,23
		INVOKE DRAW_COORDS,CX,DX,OFFSET CACTUS_NEW_3,29,25
	.ENDIF

	.IF (CACTUS_RENDER[3] == TRUE)
		MOV CX,CACTUS_POS[12].X
		MOV DX,CACTUS_POS[12].Y
		MOV CACTUS_HITBOXES[20].X1,CX
		MOV CACTUS_HITBOXES[20].Y1,DX
		MOV CACTUS_HITBOXES[20].X2,CX
		ADD CACTUS_HITBOXES[20].X2,14
		MOV CACTUS_HITBOXES[20].Y2,DX
		ADD CACTUS_HITBOXES[20].Y2,15
		INVOKE DRAW_COORDS,CX,DX,OFFSET CACTUS_NEW_4,15,14
	.ENDIF

	.IF (BONUS_BOOL == TRUE)
		MOV CX,BONUS_POS.X
		MOV DX,BONUS_POS.Y
		MOV BONUS_HITBOX.X1,CX
		MOV BONUS_HITBOX.Y1,DX
		MOV BONUS_HITBOX.X2,CX
		MOV BONUS_HITBOX.Y2,DX
		ADD BONUS_HITBOX.X2,19
		ADD BONUS_HITBOX.Y2,16
		INVOKE DRAW_COORDS,CX,DX,OFFSET HEART,16,19
	.ENDIF
	CALL DRAW_GROUND
	INVOKE DRAW_COORDS,CLOUD_1.X,CLOUD_1.Y,OFFSET CLOUD,17,25

	MOV CX,DINO_X
	MOV DX,DINO_Y
	CALL DRAW_DINO

	RET
RENDER ENDP
COLLISION PROC
	.IF (HITBOX_COOLDOWN != 0H)
		RET
	.ENDIF
	.IF (CACTUS_RENDER[0] == TRUE)
		INVOKE INTERSECTION,OFFSET DINO_HITBOX,OFFSET CACTUS_HITBOXES[0]
		.IF (AX != FALSE)			
			invoke sound, 9121d			
			invoke sound, 6087d			
			invoke sound, 8126d
			DEC HEALTH_COUNT
			MOV HITBOX_COOLDOWN,05FH
		.ENDIF
	.ENDIF
	.IF (CACTUS_RENDER[1] == TRUE)
		INVOKE INTERSECTION,OFFSET DINO_HITBOX,OFFSET CACTUS_HITBOXES[8]
		.IF (AX != FALSE)
			invoke sound, 9121d			
			invoke sound, 6087d			
			invoke sound, 8126d
			DEC HEALTH_COUNT
			MOV HITBOX_COOLDOWN,05FH
		.ENDIF
	.ENDIF
	.IF (CACTUS_RENDER[2] == TRUE)
		INVOKE INTERSECTION,OFFSET DINO_HITBOX,OFFSET CACTUS_HITBOXES[16]
		.IF (AX != FALSE)
			invoke sound, 9121d			
			invoke sound, 6087d			
			invoke sound, 8126d
			DEC HEALTH_COUNT
			MOV HITBOX_COOLDOWN,05FH
		.ENDIF
	.ENDIF
	.IF (CACTUS_RENDER[3] == TRUE)
		INVOKE INTERSECTION,OFFSET DINO_HITBOX,OFFSET CACTUS_HITBOXES[20]
		.IF (AX != FALSE)
			invoke sound, 9121d			
			invoke sound, 6087d			
			invoke sound, 8126d
			DEC HEALTH_COUNT
			MOV HITBOX_COOLDOWN,05FH
		.ENDIF
	.ENDIF
	.IF (PLANE_SHOW == TRUE)
		INVOKE INTERSECTION,OFFSET DINO_HITBOX,OFFSET PLANE_HITBOX
		.IF (AX != FALSE)
			invoke sound, 9121d			
			invoke sound, 6087d			
			invoke sound, 8126d
			DEC HEALTH_COUNT
			MOV HITBOX_COOLDOWN,05FH
			MOV PLANE_SHOW,FALSE
		.ENDIF
	.ENDIF
	.IF (BONUS_BOOL == TRUE)
		INVOKE INTERSECTION,OFFSET DINO_HITBOX,OFFSET BONUS_HITBOX
		.IF (AX != FALSE)
			invoke sound,9121d
			invoke sound,9121d
			invoke sound,9121d
			INC HEALTH_COUNT
			MOV HITBOX_COOLDOWN,05FH
			MOV BONUS_BOOL,FALSE
		.ENDIF
	.ENDIF
	RET
COLLISION ENDP
ANIMATE PROC
	INC SCORE_TIMER
	DEC TIME_ANIM

	XOR DX,DX
	MOV AX,COUNT
	MOV BX,10
	DIV BX
	.IF (DX == 0)
		DEC GAME_TIMER
	.ENDIF
	.IF (DINO_DOWN_TIMER != 1H && DINO_DOWN == TRUE)
		DEC DINO_DOWN_TIMER
	.ELSE
		MOV DINO_DOWN,FALSE
	.ENDIF

	.IF (CACTUS_RENDER[0] == TRUE)
		DEC CACTUS_POS[0].X
		.IF (CACTUS_POS[0].X > 319)
			MOV CACTUS_RENDER[0],FALSE
		.ENDIF
	.ENDIF
	.IF (CACTUS_RENDER[1] == TRUE)
		DEC CACTUS_POS[4].X
		.IF (CACTUS_POS[4].X > 319)
			MOV CACTUS_RENDER[1],FALSE
		.ENDIF
	.ENDIF
	.IF (CACTUS_RENDER[2] == TRUE)
		DEC CACTUS_POS[8].X
		.IF (CACTUS_POS[8].X > 319)
			MOV CACTUS_RENDER[2],FALSE
		.ENDIF
	.ENDIF
	.IF (CACTUS_RENDER[3] == TRUE)
		DEC CACTUS_POS[12].X
		.IF (CACTUS_POS[12].X > 319)
			MOV CACTUS_RENDER[3],FALSE
		.ENDIF
	.ENDIF
	
	.IF (HURDLE_TIMER != 0H)
		DEC HURDLE_TIMER
	.ELSE
		INVOKE RAND,090H,0AFH
		MOV HURDLE_TIMER,AL
		CALL RANDOMIZE_HURDLE
	.ENDIF

	.IF (BONUS_BOOL == TRUE)
		DEC BONUS_POS.X
		.IF (BONUS_POS.X > 319)
			MOV BONUS_BOOL,FALSE
		.ENDIF
	.ENDIF

	.IF (SCORE_TIMER == 40)
		INC COUNT
		MOV SCORE_TIMER,0
	.ENDIF

	.IF (TIME_BOOL == FALSE)
		.IF (TIME_ANIM == 05H)
			DEC MOON.X
		.ENDIF
	.ELSEIF (TIME_BOOL != FALSE)
		.IF (TIME_ANIM == 05H)
			DEC SUN.X
		.ENDIF
	.ENDIF

	.IF (CLOUD_1.X>319)
		MOV CLOUD_1.X,319
	.ENDIF

	.IF (DINO_ANIM_BOOL == FALSE)
		INC DINO_ANIM
	.ELSE
		DEC DINO_ANIM
	.ENDIF
	.IF (DINO_ANIM > 10H || DINO_ANIM < 1H)
		NOT DINO_ANIM_BOOL
	.ENDIF
	.IF (PLANE_SHOW == TRUE)
		DEC PLANE_X
		.IF (PLANE_X > 319)
			MOV PLANE_SHOW,FALSE
		.ENDIF
	.ENDIF
	
	.IF (DINO_Y <= 97 && DINO_JUMP_ANIM == 0H)
		MOV DINO_JUMP_ANIM,2
	.ELSEIF (DINO_Y <= 110 && DINO_Y > 97 && DINO_JUMP_ANIM == 0H)
		INC DINO_JUMP_ANIM
	.ENDIF

	.IF (DINO_JUMP_ANIM != 0H)
		DEC DINO_JUMP_ANIM
	.ENDIF
	.IF (DINO_JUMP != 0H && DINO_Y != 90 && DINO_JUMP_ANIM == 0H)
		DEC DINO_Y
	.ELSEIF (DINO_JUMP == 0H && DINO_Y != 137 && DINO_JUMP_ANIM == 0H)
		INC DINO_Y
	.ELSEIF (DINO_Y == 90)
		MOV DINO_JUMP,0H
	.ENDIF
	
	DEC BG_SWAP
	.IF (BG_SWAP == 00H)
		MOV BG_SWAP,08H
	.ENDIF

	.IF (TIME_BOOL == FALSE && BG_CLR != 14H && BG_SWAP == 1H)
		DEC BG_CLR
	.ENDIF
	.IF (TIME_BOOL == TRUE && BG_CLR != 1FH && BG_SWAP == 1H)
		INC BG_CLR
	.ENDIF

	.IF (SUN.X > 319)
		MOV SUN.X,319
		MOV SUN.Y,50
		INVOKE CHANGE_COLOR,14H,1EH,OFFSET DINO_COORD,25,25
		INVOKE CHANGE_COLOR,14H,1EH,OFFSET DINO_COORD_1,25,25
		INVOKE CHANGE_COLOR,14H,1EH,OFFSET DINO_COORD_2,25,25
		INVOKE CHANGE_COLOR,14H,1EH,OFFSET DINO_DOWN_3,14,28
		INVOKE CHANGE_COLOR,14H,1EH,OFFSET DINO_DOWN_4,14,28
		NOT TIME_BOOL
	.ELSEIF (MOON.X > 319)
		MOV MOON.X,319
		MOV MOON.Y,50
		INVOKE CHANGE_COLOR,1EH,14H,OFFSET DINO_COORD,25,25
		INVOKE CHANGE_COLOR,1EH,14H,OFFSET DINO_COORD_1,25,25
		INVOKE CHANGE_COLOR,1EH,14H,OFFSET DINO_COORD_2,25,25
		INVOKE CHANGE_COLOR,1EH,14H,OFFSET DINO_DOWN_3,14,28
		INVOKE CHANGE_COLOR,1EH,14H,OFFSET DINO_DOWN_4,14,28
		NOT TIME_BOOL
	.ENDIF
	.IF (TIME_ANIM == 0H)
		MOV TIME_ANIM,010H
	.ENDIF
	.IF (HITBOX_COOLDOWN != 0H)
		DEC HITBOX_COOLDOWN
	.ENDIF
	.IF (CLOUD_ANIM != 0H)
		DEC CLOUD_ANIM
	.ELSE
		MOV CLOUD_ANIM,03H
		DEC CLOUD_1.X
	.ENDIF
	RET
ANIMATE ENDP

DISPLAY_HIGHSCORE PROC
	MSET_CURSOR 46,0
	MOV DX,OFFSET STRING10
	MOV AH,09H
	INT 21H
	MSET_CURSOR 47,0
	
	MOV DX, OFFSET FILENAME2 ; LOAD ADDRESS OF STRING FILENAME
	MOV AL, 0 ; OPENS FILE
	MOV AH, 3DH ; LOAD FILE HANDLER AND STORE IN AX
	INT 21H
		
	MOV HANDLER2,AX
	MOV BX,HANDLER2 ; MOVE FILE HANDLER TO BX
		
	MOV DX, OFFSET BUFFER2 ; LOAD ADDRESS OF STRING IN WHICH FILE CONTENTS WILL BE STORED AFTER READING
	MOV CX, LENGTHOF BUFFER2
	MOV AH,3FH
	INT 21H

	
	INVOKE CONVERT_NUM,OFFSET BUFFER2
	PUSH AX
	PUSH BX
	PUSH CX
	POP AX
	MOV SCORE_ARR[0],AX
	POP AX
	MOV SCORE_ARR[2],AX
	POP AX
	MOV SCORE_ARR[4],AX
	MOV AX,COUNT
	MOV SCORE_ARR[6],AX

	INVOKE SORT,OFFSET SCORE_ARR
	MOV AX,SCORE_ARR[0]
	CALL DISPLAY
	MOV AH,02H
	MOV DL,10
	INT 21H
	MOV AX,SCORE_ARR[2]
	CALL DISPLAY
	MOV AH,02H
	MOV DL,10
	INT 21H
	MOV AX,SCORE_ARR[4]
	CALL DISPLAY

	;CLOSING THE FILE
	MOV AH,3EH
	INT 21H

	RET
DISPLAY_HIGHSCORE ENDP

MAIN_LOOP PROC
	.WHILE (1)
		CALL BGRD_CLR
		CALL DISPLAY_NAME
		CALL RENDER
		CALL COLLISION

		CALL GET_KEY
		JZ NO_CLEAR

		.IF ((AL == ' ' || AH == 048H) && DINO_Y == 137)
			MOV DINO_JUMP,TRUE
			MOV DINO_DOWN,FALSE
		.ELSEIF (AH == 050H)
			MOV DINO_DOWN,TRUE
			MOV DINO_DOWN_TIMER,010H
		.ELSEIF (AH == 04DH && DINO_X <= 150)
			ADD DINO_X,2
		.ELSEIF (AH == 04BH && DINO_X >= 10)
			SUB DINO_X,2
		.ENDIF
		.BREAK .IF (AL == 'Q')
		.BREAK .IF (AL == 'q')
		.BREAK .IF (HEALTH_COUNT == 1)
		CALL CLEAR_KEY_BUFFER

	    NO_CLEAR:
		MOV CX,0H
		MOV DX,GAME_TIMER
		CALL TIMER
		CALL ANIMATE
	.ENDW
	
	CALL CLEAR_KEY_BUFFER
	RET
MAIN_LOOP ENDP

MAIN PROC
	.STARTUP
	CALL SRAND
	CALL INITIALIZE_GROUND
	MOV HEALTH_COUNT,6
	MOV COUNT,0
	CALL SCREEN1
	.EXIT
MAIN ENDP
END